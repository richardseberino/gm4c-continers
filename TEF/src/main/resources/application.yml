server:
  port: 9000
spring:
  kafka:
    properties:
      request.timeout.ms: 20000
      retry.backoff.ms: 500
      schema.registry.url: http://localhost:8081  
      specific: 
        avro: 
          reader: true
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      group-id: tef-groupid
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema:
          registry:
            url: http://localhost:8081
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema:
          registry:
            url: http://localhost:8081
  data:
    cassandra:
      contact-points: 127.0.0.1
      username: cassandra
      password: cassandra
      keyspace-name: itau
      port: 9042
      schema-action: CREATE_IF_NOT_EXISTS

management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true 
  endpoints:
      web:
        exposure:
          include:
          - "*"
